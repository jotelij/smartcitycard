# Generated by Django 4.1.7 on 2023-03-17 16:23

import cities.models
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("cities", "0001_initial"),
        migrations.swappable_dependency(settings.CITIES_CONTINENT_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SmartCity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=200, verbose_name="ascii name"
                    ),
                ),
                (
                    "name_std",
                    models.CharField(
                        db_index=True, max_length=200, verbose_name="standard name"
                    ),
                ),
                ("location", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ("population", models.IntegerField()),
                ("elevation", models.IntegerField(null=True)),
                ("kind", models.CharField(max_length=10)),
                ("timezone", models.CharField(max_length=40)),
                ("more_data", models.TextField()),
                ("alt_names", models.ManyToManyField(to="cities.alternativename")),
            ],
            options={
                "verbose_name": "City",
                "verbose_name_plural": "Cities",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SmartDistrict",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=200, verbose_name="ascii name"
                    ),
                ),
                (
                    "name_std",
                    models.CharField(
                        db_index=True, max_length=200, verbose_name="standard name"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True, db_index=True, max_length=200, null=True
                    ),
                ),
                ("location", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ("population", models.IntegerField()),
                ("more_data", models.TextField()),
                ("alt_names", models.ManyToManyField(to="cities.alternativename")),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=cities.models.SET_NULL_OR_CASCADE,
                        related_name="districts",
                        to=settings.CITIES_CITY_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Subcity",
                "verbose_name_plural": "Subcities",
                "abstract": False,
                "unique_together": {("city", "name")},
            },
        ),
        migrations.CreateModel(
            name="Woreda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=200, verbose_name="ascii name"
                    ),
                ),
                (
                    "name_std",
                    models.CharField(
                        db_index=True, max_length=200, verbose_name="standard name"
                    ),
                ),
                ("location", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ("population", models.IntegerField()),
                ("alt_names", models.ManyToManyField(to="cities.alternativename")),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=cities.models.SET_NULL_OR_CASCADE,
                        related_name="woredas",
                        to=settings.CITIES_CITY_MODEL,
                    ),
                ),
                (
                    "district",
                    models.ForeignKey(
                        on_delete=cities.models.SET_NULL_OR_CASCADE,
                        related_name="woredas",
                        to=settings.CITIES_DISTRICT_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("city", "district", "name")},
            },
        ),
        migrations.CreateModel(
            name="SmartCountry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=200, verbose_name="ascii name"
                    ),
                ),
                ("code", models.CharField(db_index=True, max_length=2, unique=True)),
                ("code3", models.CharField(db_index=True, max_length=3, unique=True)),
                ("population", models.IntegerField()),
                ("area", models.IntegerField(null=True)),
                ("currency", models.CharField(max_length=3, null=True)),
                (
                    "currency_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "currency_symbol",
                    models.CharField(blank=True, max_length=31, null=True),
                ),
                ("language_codes", models.CharField(max_length=250, null=True)),
                ("phone", models.CharField(max_length=20)),
                ("tld", models.CharField(max_length=5, verbose_name="TLD")),
                ("postal_code_format", models.CharField(max_length=127)),
                ("postal_code_regex", models.CharField(max_length=255)),
                ("capital", models.CharField(max_length=100)),
                ("more_data", models.TextField()),
                ("alt_names", models.ManyToManyField(to="cities.alternativename")),
                (
                    "continent",
                    models.ForeignKey(
                        null=True,
                        on_delete=cities.models.SET_NULL_OR_CASCADE,
                        related_name="countries",
                        to=settings.CITIES_CONTINENT_MODEL,
                    ),
                ),
                (
                    "neighbours",
                    models.ManyToManyField(
                        related_name="_cities_country_neighbours_+",
                        to=settings.CITIES_COUNTRY_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Country",
                "verbose_name_plural": "Countries",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="smartcity",
            name="country",
            field=models.ForeignKey(
                on_delete=cities.models.SET_NULL_OR_CASCADE,
                related_name="cities",
                to=settings.CITIES_COUNTRY_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="smartcity",
            name="region",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=cities.models.SET_NULL_OR_CASCADE,
                related_name="cities",
                to="cities.region",
            ),
        ),
        migrations.AddField(
            model_name="smartcity",
            name="subregion",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=cities.models.SET_NULL_OR_CASCADE,
                related_name="cities",
                to="cities.subregion",
            ),
        ),
        migrations.CreateModel(
            name="Kebele",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=200, verbose_name="ascii name"
                    ),
                ),
                (
                    "name_std",
                    models.CharField(
                        db_index=True, max_length=200, verbose_name="standard name"
                    ),
                ),
                ("location", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ("population", models.IntegerField()),
                ("alt_names", models.ManyToManyField(to="cities.alternativename")),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=cities.models.SET_NULL_OR_CASCADE,
                        related_name="kebeles",
                        to=settings.CITIES_CITY_MODEL,
                    ),
                ),
                (
                    "district",
                    models.ForeignKey(
                        on_delete=cities.models.SET_NULL_OR_CASCADE,
                        related_name="kebeles",
                        to=settings.CITIES_DISTRICT_MODEL,
                    ),
                ),
                (
                    "woreda",
                    models.ForeignKey(
                        on_delete=cities.models.SET_NULL_OR_CASCADE,
                        related_name="kebeles",
                        to="magala.woreda",
                    ),
                ),
            ],
            options={
                "unique_together": {("city", "district", "woreda", "name")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="smartcity",
            unique_together={("country", "region", "subregion", "id", "name")},
        ),
        migrations.CreateModel(
            name="House",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=200, verbose_name="ascii name"
                    ),
                ),
                ("location", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ("alt_names", models.ManyToManyField(to="cities.alternativename")),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=cities.models.SET_NULL_OR_CASCADE,
                        related_name="houses",
                        to=settings.CITIES_CITY_MODEL,
                    ),
                ),
                (
                    "district",
                    models.ForeignKey(
                        on_delete=cities.models.SET_NULL_OR_CASCADE,
                        related_name="houses",
                        to=settings.CITIES_DISTRICT_MODEL,
                    ),
                ),
                (
                    "kebele",
                    models.ForeignKey(
                        on_delete=cities.models.SET_NULL_OR_CASCADE,
                        related_name="houses",
                        to="magala.kebele",
                    ),
                ),
                (
                    "woreda",
                    models.ForeignKey(
                        on_delete=cities.models.SET_NULL_OR_CASCADE,
                        related_name="houses",
                        to="magala.woreda",
                    ),
                ),
            ],
            options={
                "unique_together": {("district", "woreda", "kebele", "name")},
            },
        ),
    ]
