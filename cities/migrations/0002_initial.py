# Generated by Django 4.1.7 on 2023-03-17 16:23

import cities.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.CITIES_COUNTRY_MODEL),
        migrations.swappable_dependency(settings.CITIES_CITY_MODEL),
        ("cities", "0001_initial"),
        migrations.swappable_dependency(settings.CITIES_DISTRICT_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="region",
            name="country",
            field=models.ForeignKey(
                on_delete=cities.models.SET_NULL_OR_CASCADE,
                related_name="regions",
                to=settings.CITIES_COUNTRY_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="postalcode",
            name="alt_names",
            field=models.ManyToManyField(to="cities.alternativename"),
        ),
        migrations.AddField(
            model_name="postalcode",
            name="city",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=cities.models.SET_NULL_OR_CASCADE,
                related_name="postal_codes",
                to=settings.CITIES_CITY_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="postalcode",
            name="country",
            field=models.ForeignKey(
                on_delete=cities.models.SET_NULL_OR_CASCADE,
                related_name="postal_codes",
                to=settings.CITIES_COUNTRY_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="postalcode",
            name="district",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=cities.models.SET_NULL_OR_CASCADE,
                related_name="postal_codes",
                to=settings.CITIES_DISTRICT_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="postalcode",
            name="region",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=cities.models.SET_NULL_OR_CASCADE,
                related_name="postal_codes",
                to="cities.region",
            ),
        ),
        migrations.AddField(
            model_name="postalcode",
            name="subregion",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=cities.models.SET_NULL_OR_CASCADE,
                related_name="postal_codes",
                to="cities.subregion",
            ),
        ),
        migrations.AddField(
            model_name="district",
            name="alt_names",
            field=models.ManyToManyField(to="cities.alternativename"),
        ),
        migrations.AddField(
            model_name="district",
            name="city",
            field=models.ForeignKey(
                on_delete=cities.models.SET_NULL_OR_CASCADE,
                related_name="districts",
                to=settings.CITIES_CITY_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="country",
            name="alt_names",
            field=models.ManyToManyField(to="cities.alternativename"),
        ),
        migrations.AddField(
            model_name="country",
            name="continent",
            field=models.ForeignKey(
                null=True,
                on_delete=cities.models.SET_NULL_OR_CASCADE,
                related_name="countries",
                to=settings.CITIES_CONTINENT_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="country",
            name="neighbours",
            field=models.ManyToManyField(
                related_name="_cities_country_neighbours_+",
                to=settings.CITIES_COUNTRY_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="continent",
            name="alt_names",
            field=models.ManyToManyField(to="cities.alternativename"),
        ),
        migrations.AddField(
            model_name="city",
            name="alt_names",
            field=models.ManyToManyField(to="cities.alternativename"),
        ),
        migrations.AddField(
            model_name="city",
            name="country",
            field=models.ForeignKey(
                on_delete=cities.models.SET_NULL_OR_CASCADE,
                related_name="cities",
                to=settings.CITIES_COUNTRY_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="city",
            name="region",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=cities.models.SET_NULL_OR_CASCADE,
                related_name="cities",
                to="cities.region",
            ),
        ),
        migrations.AddField(
            model_name="city",
            name="subregion",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=cities.models.SET_NULL_OR_CASCADE,
                related_name="cities",
                to="cities.subregion",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="subregion",
            unique_together={("region", "id", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="region",
            unique_together={("country", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="postalcode",
            unique_together={
                (
                    "country",
                    "region_name",
                    "subregion_name",
                    "district_name",
                    "name",
                    "id",
                    "code",
                ),
                (
                    "country",
                    "region",
                    "subregion",
                    "city",
                    "district",
                    "name",
                    "id",
                    "code",
                ),
            },
        ),
        migrations.AlterUniqueTogether(
            name="district",
            unique_together={("city", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="city",
            unique_together={("country", "region", "subregion", "id", "name")},
        ),
    ]
